

enum Transport {
  Train
  Bus
  Taxi
  Car
  Bicycle
  Boat
}

enum Accommodation {
  WildCamp
  Campsite
  Hostel
  MountainHut
  Bothy
  Hotel
  BedAndBreakfast
  Bivy
}

type Waypoint {
  id: ID
  name: String
  lat: Float
  lng: Float
}

input WaypointDetailsInput {
  name: String
  lat: Float
  lng: Float
}

type Segment {
  id: ID
  primaryDate: Date
  indexInDay: Int
  startDate: Date
  finishDate: Date
  startLocation: String
  finishLocation: String
  # transportToStart: [Transport]
  # transportFromFinish: [Transport]
  # accommodationAtStart: Accommodation
  # accommodationAtFinish: Accommodation
  route: String
  weather: String
  people: String
  lengthKm: Float
  comments: String
  waypoints: [Waypoint]
  tags: [String]
  hikeName: String
  tripName: String
}

input CreateSegmentInput {
  primaryDate: Date
  indexInDay: Int
  startDate: Date
  finishDate: Date
  startLocation: String
  finishLocation: String
  route: String
  weather: String
  people: String
  lengthKm: Float
  comments: String
  waypoints: [WaypointDetailsInput]
  tags: [String]
  hikeName: String   # encompassing hike if any (eg. GR20, Sierra Nevada)
  tripName: String   # overall trip (eg. Corsica)
}

input UpdateSegmentDetails {
  primaryDate: Date
  indexInDay: Int
  startDate: Date
  finishDate: Date
  startLocation: String
  finishLocation: String
  route: String
  weather: String
  people: String
  lengthKm: Float
  comments: String
  waypoints: [WaypointDetailsInput]
  tags: [String]
  hikeName: String
  tripName: String
}

input UpdateSegmentInput {
  id: ID
  patch: UpdateSegmentDetails
}

input DeleteSegmentInput {
  id: ID
}

input InsertWaypointInput {
  segmentId: ID
  waypointDetailsInput: WaypointDetailsInput
  insertBefore: ID
  insertAfter: ID
}

input DeleteWaypointInput {
  segmentId: ID
  waypointId: ID
}

input UpdateWaypointInput {
  segmentId: ID
  waypointId: ID
  waypointDetailsInput: WaypointDetailsInput
}

type Query {
  getSegments: [Segment]
  segment(id: ID!): Segment
}

type Mutation {
  createSegment(createSegmentInput: CreateSegmentInput): Segment
  updateSegment(updateSegmentInput: UpdateSegmentInput): Segment
  deleteSegment(deleteSegmentInput: DeleteSegmentInput): Boolean
  insertWaypoint(insertWaypointInput: InsertWaypointInput): Segment
  updateWaypoint(updateWaypointInput: UpdateWaypointInput): Segment
  deleteWaypoint(deleteWaypointInput: DeleteWaypointInput): Segment
}

# type Mutation {
#   createSegment(createSegmentInput: CreateSegmentInput): Segment
#   insertNewWaypoint(
#     segmentId: ID
#     waypointDetailsInput: CreateWaypointInput
#     insertBefore: ID
#     insertAfter: ID
#   ): Segment
#   insertExistingWaypoint(
#     segmentId: ID
#     waypointId: ID
#     insertBefore: ID
#     insertAfter: ID
#   ): Segment
# }
