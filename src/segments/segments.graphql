

type Segment {
  id: ID
  primaryDate: Date
  indexInDay: Int
  startDate: Date
  finishDate: Date
  startLocation: String
  finishLocation: String
  route: String
  weather: String
  people: String
  lengthKm: Float
  tags: [String]
  comments: String
  waypoints: [Waypoint]
}

input CreateSegmentInput {
  primaryDate: Date
  indexInDay: Int
  startDate: Date
  finishDate: Date
  startLocation: String
  finishLocation: String
  route: String
  weather: String
  people: String
  lengthKm: Float
  tags: [String]
  comments: String
  waypoints: [WaypointDetailsInput]
}

input UpdateSegmentInput {
  id: ID
  patch: CreateSegmentInput
}

# input WaypointDetailsInput {
#   name: String
#   lat: Float
#   lng: Float
# }

type Query {
  getSegments: [Segment]
  segment(id: ID!): Segment
}

type Mutation {
  updateSegment(updateSegmentInput: UpdateSegmentInput): Segment
}

# type Mutation {
#   createSegment(createSegmentInput: CreateSegmentInput): Segment
#   insertNewWaypoint(
#     segmentId: ID
#     waypointDetailsInput: CreateWaypointInput
#     insertBefore: ID
#     insertAfter: ID
#   ): Segment
#   insertExistingWaypoint(
#     segmentId: ID
#     waypointId: ID
#     insertBefore: ID
#     insertAfter: ID
#   ): Segment
# }
